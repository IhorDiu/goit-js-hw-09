{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBA6BjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUJ,UAEpBU,EAAO,CAAEN,WAAUJ,S,GAEpBA,E,IAnCPJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBAKF,IAJA,IAAIC,EAAaC,OAAOpB,EAAKI,MAAMiB,OAC/BC,EAAYF,OAAOpB,EAAKK,KAAKgB,OAC7BE,EAAcH,OAAOpB,EAAKM,OAAOe,OAE5BG,EAAI,EAAGA,EAAID,EAAaC,GAAK,EACpCjB,EAAciB,EAAI,EAAGL,EAAaG,EAAYE,GAC3CC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUJ,EAAKsB,EAALtB,MACjBuB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUJ,EAAKsB,EAALtB,MAClBuB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAAN1B,EAAM,M,IAG9C6B,SAAQ,WACPjC,EAAKC,KAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  };\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let inputDelay = Number(refs.delay.value);\n  let inputStep = Number(refs.step.value);\n  let inputAmount = Number(refs.amount.value);\n\n  for (let i = 0; i < inputAmount; i += 1) {\n    createPromise(i + 1, inputDelay + inputStep * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n      .finally(() => {\n        refs.form.reset()\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","inputDelay","Number","value","inputStep","inputAmount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","reset"],"version":3,"file":"03-promises.95e3156a.js.map"}